name: Build Docker Images

on:
  pull_request:
    paths:
      - docker/**
      - ".github/workflows/docker-build.yml"

jobs:
  setup:
    name: Setup
    runs-on: ${{ matrix.os }}
    outputs:
      modified: ${{ steps.set-modified.outputs.modified }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Changed Files Exporter
        id: files
        uses: futuratrepadeira/changed-files@v3.3.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get a list of modified files
        run: echo "modified=${{ steps.files.outputs.files_created }} ${{ steps.files.outputs.files_updated }}" >> $GITHUB_ENV

      - name: Debug Step
        run: echo "${{ env.modified }}"

      - name: Set outputs
        id: set-modified
        run: echo "::set-output name=modified::${{ env.modified }}"

  build-hvd:
    name: Build all Horovod flavoured PyTorch-Ignite images
    needs: setup
    if: contains(needs.setup.outputs.modified, 'hvd/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        type: [hvd]
        base: [hvd-base]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: "Build ${{ matrix.type }} ${{ matrix.base }} base"
        run: |
          pip install PyYAML
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          export HVD_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_hvd_version']['default'])"`
          cd docker
          docker system prune -a -f
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" ${{ matrix.base }}
      - name: "Build ${{ matrix.type }} hvd-vision"
        run: |
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          export HVD_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_hvd_version']['default'])"`
          cd docker
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" hvd-vision
      - name: "Build ${{ matrix.type }} hvd-nlp"
        run: |
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          export HVD_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_hvd_version']['default'])"`
          cd docker
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" hvd-nlp

  build-hvd-apex:
    name: Build all Horovod + Apex flavoured PyTorch-Ignite images
    needs: setup
    if: contains(needs.setup.outputs.modified, 'hvd/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        type: [hvd]
        base: [hvd-apex]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: "Build ${{ matrix.type }} ${{ matrix.base }} base"
        run: |
          pip install PyYAML
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          export HVD_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_hvd_version']['default'])"`
          cd docker
          docker system prune -a -f
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" ${{ matrix.base }}
      - name: "Build ${{ matrix.type }} hvd-apex-vision"
        run: |
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          export HVD_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_hvd_version']['default'])"`
          cd docker
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" hvd-apex-vision
      - name: "Build ${{ matrix.type }} hvd-apex-nlp"
        run: |
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          export HVD_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_hvd_version']['default'])"`
          cd docker
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" hvd-apex-nlp

  build-main:
    name: Build all PyTorch-Ignite images
    needs: setup
    if: contains(needs.setup.outputs.modified, 'main/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        type: [main]
        base: [base]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: "Build ${{ matrix.type }} ${{ matrix.base }} base"
        run: |
          pip install PyYAML
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          cd docker
          docker system prune -a -f
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" ${{ matrix.base }}
      - name: "Build ${{ matrix.type }} vision"
        run: |
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          cd docker
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" vision
      - name: "Build ${{ matrix.type }} nlp"
        run: |
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          cd docker
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" nlp

  build-main-apex:
    name: Build all PyTorch-Ignite images with Apex
    needs: setup
    if: contains(needs.setup.outputs.modified, 'main/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        type: [main]
        base: [apex]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: "Build ${{ matrix.type }} ${{ matrix.base }} base"
        run: |
          pip install PyYAML
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          cd docker
          docker system prune -a -f
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" ${{ matrix.base }}
      - name: "Build ${{ matrix.type }} apex-vision"
        run: |
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          cd docker
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" apex-vision
      - name: "Build ${{ matrix.type }} apex-nlp"
        run: |
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          cd docker
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" apex-nlp

  build-msdp-apex:
    name: Build all MS DeepSpeed flavoured PyTorch-Ignite images
    needs: setup
    if: contains(needs.setup.outputs.modified, 'msdp/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        type: [msdp]
        base: [msdp-apex]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: "Build ${{ matrix.type }} ${{ matrix.base }} base"
        run: |
          pip install PyYAML
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          export MSDP_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_msdp_version']['default'])"`     
          cd docker
          docker system prune -a -f
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" ${{ matrix.base }}
      - name: "Build ${{ matrix.type }} msdp-apex-vision"
        run: |
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          export MSDP_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_msdp_version']['default'])"`     
          cd docker
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" msdp-apex-vision
      - name: "Build ${{ matrix.type }} msdp-apex-nlp"
        run: |
          export PTH_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_pytorch_version']['default'])"`
          export MSDP_VERSION=`python -c "import yaml; f=open('.circleci/config.yml'); d=yaml.safe_load(f); print(d['parameters']['build_docker_image_msdp_version']['default'])"`     
          cd docker
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          bash build.sh "${{ matrix.type }}" msdp-apex-nlp
